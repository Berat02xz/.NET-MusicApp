@{
    ViewData["Title"] = "Details";
    var album = ViewBag.Album as MusicStore.Domain.Models.Album;
    var tracks = ViewBag.Tracks as List<MusicStore.Domain.Models.Track> ?? new List<MusicStore.Domain.Models.Track>();
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />

<style>
    .play-button {
        font-size: 24px;
        color: #000000; /* Adjust color as needed */
        cursor: pointer;
        transition: transform 0.3s, color 0.3s;
    }

    .play-button:hover {
            transform: scale(1.2);
            color: #0056b3; /* Adjust color on hover as needed */
    }

    .fa-solid{
        font-size: 24px;
        color: #000000; /* Adjust color as needed */
        cursor: pointer;
        transition: transform 0.3s, color 0.3s;
    }

    .fa-solid:hover{
            transform: scale(1.2);
            color: #0056b3; /* Adjust color on hover as needed */
    }

</style>


<h1>Details</h1>

<div>
    <h4>Album</h4>
    <hr />
    @if (album == null)
    {
        <p>Album not found.</p>
    }
    else
    {
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => album.Title)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => album.Title)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => album.CoverImageUrl)
            </dt>
            <dd class="col-sm-10">
                <img src="@album.CoverImageUrl" alt="Cover Image" width="100" />
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => album.Description)
            </dt>
            <dd class="col-sm-10">
                @album.Description
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => album.ReleaseDate)
            </dt>
            <dd class="col-sm-10">
                @album.ReleaseDate.ToShortDateString()
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => album.Tags)
            </dt>
            <dd class="col-sm-10">
                @album.Tags
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => album.Type)
            </dt>
            <dd class="col-sm-10">
                @album.Type
            </dd>
        </dl>
    }
</div>

<div>
    <h4>Tracks</h4>
    <a asp-action="Create" asp-controller="Tracks" asp-route-albumId="@album.Id" class="btn btn-primary">Add Track</a>
    <hr />
    @if (tracks.Any())
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Play</th>
                    <th>Title</th>
                    <th>Duration</th>
                    <th>Listen Count</th>
                    <th>Artists</th>
                    <th>Playlist</th>
                    <th>Actions</th> <!-- Add an Actions column -->
                </tr>
            </thead>
            <tbody>
                @foreach (var track in tracks)
                {
                    <tr>
                        <td>
                            <a href="@track.YoutubeURL">
                            <!-- Play Button Symbol using Font Awesome -->
                            <i class="fa-solid fa-play play-button"
                               data-id="@track.Id"
                               data-url="@Url.Action("Play", "Tracks")"
                               onclick="playTrack($(this).data('id'), $(this).data('url'))">
                            </i>
                            </a>
                        </td>
                        <td>@track.Title</td>
                        <td>@track.Duration</td>
                        <td>@track.ListenCount</td>
                        <td>
                            @if (track.Artists != null && track.Artists.Any())
                            {
                                <ul>
                                    @foreach (var artist in track.Artists)
                                    {
                                        <li>@artist.Name</li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <p>No artists</p>
                            }
                        </td>
                        <td>
                            <!-- Add To Playlist -->
                            <a href="#" class="add-to-playlist" data-track-id="@track.Id">
                                <i class="fa-solid fa-circle-plus"></i>
                            </a>
                        </td>
                        <td>
                            <!-- Edit Button -->
                            <a href="@Url.Action("Edit", "Tracks", new { id = track.Id })" class="btn btn-primary btn-sm">Edit</a>
                            <!-- Delete Button -->
                            <form asp-action="Delete" method="post" style="display:inline;" asp-controller="Tracks">
                                <input type="hidden" name="id" value="@track.Id" />
                                <input type="submit" value="Delete" class="btn btn-danger btn-sm" />
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p>No tracks available.</p>
    }
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>


@section Scripts {
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>
        function playTrack(trackId, playUrl) {
            // Send an AJAX request to increment the listen count
            $.post(playUrl, { id: trackId }, function (response) {
                console.log('Track listened:', trackId);
                // Optionally, update the UI to reflect the incremented listen count
                location.reload();

            }).fail(function () {
                alert('Error occurred while playing the track.');
            });
        }
    </script>
    <script>
        $(document).on('click', '.add-to-playlist', function () {
            var button = $(this); // Reference to the clicked button
            var trackId = button.data('track-id'); // Retrieve the track ID from the data attribute

            $.ajax({
                url: '@Url.Action("AddTrackToPlaylist", "Playlists")', // URL to send the AJAX request to (specify the controller name)
                type: 'POST', // HTTP method
                data: {
                    trackId: trackId // Send the track ID
                },
                success: function (result) {
                    // Handle successful response
                    alert('Track added to playlist!');
                },
                error: function (xhr, status, error) {
                    // Handle errors
                    alert('An error occurred: ' + xhr.responseText);
                }
            });
        });
    </script>

}