@model MusicStore.Domain.Models.Track
@using System.Text.Json
@using System.Text.Json.Serialization
@using MusicStore.Domain.Models

@{
    ViewBag.Title = "Add Track";
    var track = Model ?? new Track(); // Handle case when Model is null
    var artistsJson = ViewBag.Artists as string;
    var selectedArtistIdsJson = ViewBag.SelectedArtistIds as string;

    // Configure JsonSerializerOptions to handle cycles
    var options = new JsonSerializerOptions
            {
                ReferenceHandler = ReferenceHandler.Preserve
            };
}
<style>
    .track-artist-list a {
        cursor: pointer;
    }

    .track-artist-list .list-group-item {
        margin-bottom: 0.5rem;
    }

    .selected-track-artists .list-group-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
</style>

<h1>@ViewBag.Title</h1>

<form asp-action="Create" method="post">
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        <label for="Title">Title</label>
        <input type="text" name="Title" value="@Model.Title" class="form-control" required />
    </div>

    <div class="form-group">
        <label for="Duration">Duration</label>
        <input type="text" name="Duration" value="@Model.Duration" class="form-control" />
    </div>

    <div class="form-group">
        <label for="YoutubeURL">YouTube URL</label>
        <input type="text" name="YoutubeURL" value="@Model.YoutubeURL" class="form-control" />
    </div>

    <div class="form-group">
        <label>Listen Count</label>
        <input type="text" value="@Model.ListenCount" class="form-control" readonly />
    </div>

    <div class="form-group">
        <label>Select Artists</label>
        <input type="text" class="form-control track-artist-search" placeholder="Search for artists..." />
        <div class="list-group track-artist-list"></div>
        <ul class="list-group selected-track-artists" id="selected-track-artists">
            <!-- Selected track artists will be shown here -->
        </ul>
        <input type="hidden" name="SelectedArtistIds" />
    </div>
    <input type="hidden" name="AlbumId" value="@ViewBag.AlbumId" />

    <button type="submit" class="btn btn-primary">Save Changes</button>
</form>

@section Scripts {
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            try {
                // Parse and log JSON data
                var artistsJson = @Html.Raw(Json.Serialize(ViewBag.Artists));
                var artistsObject = JSON.parse(artistsJson);
                var artists = artistsObject.$values; // Adjust based on actual data structure
                console.log('Artists:', artists); // Log artists data

                // Initialize empty selected artist IDs
                var selectedArtistIds = [];
                console.log('Selected Artist IDs:', selectedArtistIds); // Log selected artist IDs

                // Search for artists
                $('.track-artist-search').on('input', function () {
                    var query = $(this).val().toLowerCase();
                    console.log('Search query:', query); // Log search query

                    var filteredArtists = artists.filter(function (artist) {
                        return artist.Name.toLowerCase().includes(query);
                    });

                    console.log('Filtered Artists:', filteredArtists); // Log filtered artists

                    $('.track-artist-list').empty();
                    filteredArtists.forEach(function (artist) {
                        $('.track-artist-list').append(`
                                    <a href="#" class="list-group-item list-group-item-action" data-id="${artist.Id}">
                                        ${artist.Name}
                                    </a>`);
                    });

                    if (filteredArtists.length === 0) {
                        $('.track-artist-list').append('<div class="list-group-item">No artists found</div>');
                    }
                });

                // Add artist to selected list
                $(document).on('click', '.track-artist-list a', function (e) {
                    e.preventDefault();
                    var artistId = $(this).data('id');
                    var artistName = $(this).text();

                    console.log('Clicked Artist ID:', artistId);
                    console.log('Clicked Artist Name:', artistName);

                    if (!$('#selected-track-artists li[data-id="' + artistId + '"]').length) {
                        $('#selected-track-artists').append(`
                                    <li class="list-group-item" data-id="${artistId}">
                                        ${artistName}
                                        <button type="button" class="btn btn-sm btn-danger remove-artist">Remove</button>
                                    </li>`);
                        updateSelectedArtistIds();
                    }
                });

                // Remove artist from selected list
                $(document).on('click', '.remove-artist', function () {
                    $(this).parent().remove();
                    updateSelectedArtistIds();
                });

                // Update hidden input with selected artist IDs
                function updateSelectedArtistIds() {
                    var selectedArtists = $('#selected-track-artists').find('li').map(function () {
                        return $(this).data('id');
                    }).get();

                    console.log('Updating Selected Artist IDs:', selectedArtists);

                    $('input[name="SelectedArtistIds"]').val(selectedArtists.join(','));
                }

                // Disable editing of Listen Count
                $('input[name="ListenCount"]').prop('readonly', true);
            } catch (error) {
                console.error('Error:', error);
            }
        });
    </script>
}
